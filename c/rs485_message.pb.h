/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 */

#ifndef PB_RS485_MESSAGE_PB_H_INCLUDED
#define PB_RS485_MESSAGE_PB_H_INCLUDED
#include "pb.h"
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Rs485_Type {
    Rs485_Type_READ = 0,
    Rs485_Type_DATA = 1
} Rs485_Type;
#define _Rs485_Type_MIN Rs485_Type_READ
#define _Rs485_Type_MAX Rs485_Type_DATA
#define _Rs485_Type_ARRAYSIZE ((Rs485_Type)(Rs485_Type_DATA+1))

typedef enum _Rs485_Sensor {
    Rs485_Sensor_OW = 0,
    Rs485_Sensor_TA_CHAIN = 1,
    Rs485_Sensor_WP = 2,
    Rs485_Sensor_GAS = 3,
    Rs485_Sensor_ADC2 = 4,
    Rs485_Sensor_ADC3 = 5
} Rs485_Sensor;
#define _Rs485_Sensor_MIN Rs485_Sensor_OW
#define _Rs485_Sensor_MAX Rs485_Sensor_ADC3
#define _Rs485_Sensor_ARRAYSIZE ((Rs485_Sensor)(Rs485_Sensor_ADC3+1))

/* Struct definitions */
typedef struct _AnalogData {
    int32_t adc;
    float value;
/* @@protoc_insertion_point(struct:AnalogData) */
} AnalogData;

typedef struct _OwData {
    int32_t id;
    float value;
/* @@protoc_insertion_point(struct:OwData) */
} OwData;

typedef struct _TempAccelData {
    int32_t id;
    float pitch;
    float roll;
    float temp;
/* @@protoc_insertion_point(struct:TempAccelData) */
} TempAccelData;

typedef struct _Rs485 {
    int32_t dst;
    Rs485_Type type;
    bool has_sensor;
    Rs485_Sensor sensor;
    pb_size_t ow_count;
    OwData ow[5];
    pb_size_t ad_count;
    AnalogData ad[4];
    pb_size_t tad_count;
    TempAccelData tad[4];
/* @@protoc_insertion_point(struct:Rs485) */
} Rs485;

/* Default values for struct fields */
extern const Rs485_Type Rs485_type_default;

/* Initializer values for message structs */
#define Rs485_init_default                       {0, Rs485_Type_READ, false, (Rs485_Sensor)0, 0, {OwData_init_default, OwData_init_default, OwData_init_default, OwData_init_default, OwData_init_default}, 0, {AnalogData_init_default, AnalogData_init_default, AnalogData_init_default, AnalogData_init_default}, 0, {TempAccelData_init_default, TempAccelData_init_default, TempAccelData_init_default, TempAccelData_init_default}}
#define OwData_init_default                      {0, 0}
#define AnalogData_init_default                  {0, 0}
#define TempAccelData_init_default               {0, 0, 0, 0}
#define Rs485_init_zero                          {0, (Rs485_Type)0, false, (Rs485_Sensor)0, 0, {OwData_init_zero, OwData_init_zero, OwData_init_zero, OwData_init_zero, OwData_init_zero}, 0, {AnalogData_init_zero, AnalogData_init_zero, AnalogData_init_zero, AnalogData_init_zero}, 0, {TempAccelData_init_zero, TempAccelData_init_zero, TempAccelData_init_zero, TempAccelData_init_zero}}
#define OwData_init_zero                         {0, 0}
#define AnalogData_init_zero                     {0, 0}
#define TempAccelData_init_zero                  {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AnalogData_adc_tag                       1
#define AnalogData_value_tag                     2
#define OwData_id_tag                            1
#define OwData_value_tag                         2
#define TempAccelData_id_tag                     1
#define TempAccelData_pitch_tag                  2
#define TempAccelData_roll_tag                   3
#define TempAccelData_temp_tag                   4
#define Rs485_dst_tag                            1
#define Rs485_type_tag                           2
#define Rs485_sensor_tag                         3
#define Rs485_ow_tag                             4
#define Rs485_ad_tag                             5
#define Rs485_tad_tag                            6

/* Struct field encoding specification for nanopb */
extern const pb_field_t Rs485_fields[7];
extern const pb_field_t OwData_fields[3];
extern const pb_field_t AnalogData_fields[3];
extern const pb_field_t TempAccelData_fields[5];

/* Maximum encoded size of messages (where known) */
#define Rs485_size                               289
#define OwData_size                              16
#define AnalogData_size                          16
#define TempAccelData_size                       26

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RS485_MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
